{"version":3,"sources":["webpack:///./src/components/views/Streamers.vue","webpack:///./src/components/views/Streamers.vue?9eb6","webpack:///./src/components/views/Streamers.vue?8182","webpack:///./src/components/views/Streamers.vue?3ae9"],"names":["class","header","icons","addStreamer","value","data","stripedRows","field","headerStyle","bodyClass","headerClass","body","streaming","icon","twitch_username","deleteStreamer","length","multiple","twitchEvents","te","key","event_id","twitchEventTitle","language","origin","label","type","replay","visible","displayAddModal","modal","closable","style","footer","closeAddForm","submitAddForm","valueId","newStreamer","user_id","valueName","user_name","valueLogin","user_login","name","components","Prism","TwitchUser","setup","store","getters","broadcaster","fetchEventSubscriptions","dispatch","tauStatusWs","connect","twitchEventWs","payload","disabled","console","log","streamer","twitchEvent","msgSource","event_type","render"],"mappings":"2IACE,yBAAuB,UAAnB,kBAAc,G,GACbA,MAAM,Q,GACJA,MAAM,S,EAOH,yBAAgC,QAA1BA,MAAM,cAAY,S,aA8C3BA,MAAM,S,GAQEA,MAAM,mB,kfA/DrB,EACA,yBA4EM,MA5EN,EA4EM,CA3EJ,yBAoDM,MApDN,EAoDM,CAnDJ,yBAkDQ,GAlDDA,MAAM,cAAcC,OAAO,mB,CACrBC,MAAK,sBACd,iBAKS,CALT,yBAKS,UAJPF,MAAM,oCACL,QAAK,+BAAE,EAAAG,iB,CAER,Q,8BAGJ,iBAuCY,CAvCZ,yBAuCY,GAvCAC,MAAO,EAAAC,KAAMC,YAAA,I,+BACvB,iBAmBS,CAnBT,yBAmBS,GAlBPC,MAAM,YACNC,YAAY,kCACZP,OAAO,SACPQ,UAAU,cACVC,YAAY,e,CAEDC,KAAI,sBACb,gBADiBN,EACjB,EADiBA,KACjB,MADqB,CAIbA,EAAKO,W,yBAHb,yBAIE,G,MAHAC,KAAK,cACLb,MAAM,uC,uCAMCK,EAAKO,U,iEAHd,yBAIE,G,MAHAC,KAAK,cACLb,MAAM,0D,MAKZ,yBAIS,GAJDO,MAAM,kBAAkBN,OAAO,S,CAC1BU,KAAI,sBACb,gBADiBN,EACjB,EADiBA,KACjB,MADqB,CACrB,yBAA2C,2CAAhCA,EAAKS,iBAAe,O,MAGnC,yBAYS,GAXPP,MAAM,SACNC,YAAY,kCACZP,OAAO,I,CAEIU,KAAI,sBACb,gBADiBN,EACjB,EADiBA,KACjB,MADqB,CACrB,yBAIE,GAHAQ,KAAK,cACLb,MAAM,iDACL,QAAK,mBAAE,EAAAe,eAAeV,K,oDAKV,IAAX,EAAAA,KAAKW,Q,yBAAf,yBAAuD,OAA1B,0B,mDAGjC,yBAqBM,MArBN,EAqBM,CApBJ,yBAmBQ,GAnBDhB,MAAM,cAAcC,OAAO,oB,+BAChC,iBAiBY,CAjBZ,yBAiBY,GAjBAgB,UAAU,GAAI,C,8BAEtB,iBAA0B,E,2BAD5B,yBAee,2CAdA,EAAAC,cAAY,SAAlBC,G,gCADT,yBAee,GAbZC,IAAKD,EAAGE,SACRpB,OAAQ,EAAAqB,iBAAiBH,I,+BAE1B,iBAEM,CAFN,yBAEM,MAFN,EAEM,CADJ,yBAAuC,GAAhCI,SAAS,QAAM,C,8BAAC,iBAAQ,C,0DAALJ,GAAE,O,aAMb,WAATA,EAAGK,QAAgC,WAATL,EAAGK,Q,yBAJrC,yBAME,G,MALAC,MAAM,SACNC,KAAK,SACL1B,MAAM,mCAEL,QAAK,mBAAE,EAAA2B,OAAOR,K,uHAO3B,yBA2BS,GA1BCS,QAAS,EAAAC,gB,kDAAA,EAAAA,gBAAe,IAChC5B,OAAO,eACN6B,OAAO,EACPC,UAAU,EACXC,MAAA,iB,CAQWC,OAAM,sBACf,iBAKE,CALF,yBAKE,GAJAR,MAAM,SACNZ,KAAK,cACJ,QAAO,EAAAqB,aACRlC,MAAM,iB,oBAER,yBAKE,GAJAyB,MAAM,SACNZ,KAAK,cACJ,QAAO,EAAAsB,cACRnC,MAAM,iB,sDAjBV,iBAKe,CALf,yBAKe,GAJLoC,QAAS,EAAAC,YAAYC,Q,kDAAZ,EAAAD,YAAYC,QAAO,IAC5BC,UAAW,EAAAF,YAAYG,U,oDAAZ,EAAAH,YAAYG,UAAS,IAChCC,WAAY,EAAAJ,YAAYK,W,qDAAZ,EAAAL,YAAYK,WAAU,IAC1CjB,MAAM,Y,+JClEG,+BAAgB,CAC7BkB,KAAM,YACNC,WAAY,CAAEC,MAAA,IAAOC,aAAA,MACrBC,MAH6B,WAI3B,IAAMC,EAAQ,iBAER3C,EAAO,uBAAS,WACpB,OAAO2C,EAAMC,QAAQ,oBAGjBpB,EAAkB,kBAAI,GAEtBQ,EAAc,sBAAS,CAC3BC,QAAS,GACTE,UAAW,GACXE,WAAY,KAGRQ,EAAc,uBAAsB,WACxC,OAAOF,EAAMC,QAAQ,uBAGjB/B,EAAe,uBAAS,WAC5B,OAAO8B,EAAMC,QAAQ,uBAGjBE,EAAuB,yDAAG,8GACxBH,EAAMI,SAAS,wBADS,uBAExBJ,EAAMI,SAAS,qBAFS,uBAGxBJ,EAAMI,SAAS,oBAHS,OAI9BC,EAAYC,UACZC,EAAcD,UALgB,2CAAH,qDAQvBD,EAAc,oBAAO,eACrBE,EAAgB,oBAAO,iBAI7B,SAASrB,IACPL,EAAgBzB,OAAQ,EACxBiC,EAAYC,QAAU,GACtBD,EAAYG,UAAY,GACxBH,EAAYK,WAAa,GAG3B,SAASP,IAEP,IAAMqB,EAAoB,CACxB1C,gBAAiBuB,EAAYG,UAC7BiB,UAAU,EACV7C,WAAW,GAEboC,EAAMI,SAAS,mBAAoBI,GACnCtB,IAGF,SAAS/B,IACPuD,QAAQC,IAAI,iBACZ9B,EAAgBzB,OAAQ,EAG1B,SAASW,EAAe6C,GACtBF,QAAQC,IAAI,mBAAoBC,GAChCZ,EAAMI,SAAS,mBAAoBQ,GAGrC,SAAStC,EAAiBuC,GACxB,IAAMC,EACmB,WAAvBD,EAAYrC,OACR,YACuB,SAAvBqC,EAAYrC,OACZ,UACA,GACN,OAAOqC,EAAYE,cAAc,OAC7BD,EAAY,OAAcD,EAAYE,YAAYF,GAClDC,EAAY,OAAc,WAAWD,GAG3C,SAASlC,EAAOkC,GACdb,EAAMI,SAAS,sBAAuBS,GAGxC,OA9CA,uBAAUV,GA8CH,CACL9C,OACA6C,cACAhC,eACAI,mBACAK,SACAxB,cACA0B,kBACAQ,cACAH,eACAC,gBACApB,qB,UCjHN,EAAOiD,OAASA,EAED,gB,2DCPf","file":"static/js/chunk-af3cb636.8f73d10d.js","sourcesContent":["<template>\n  <h1>Streamers List</h1>\n  <div class=\"grid\">\n    <div class=\"col-6\">\n      <Panel class=\"dark-header\" header=\"Streamer Status\">\n        <template #icons>\n          <button\n            class=\"p-panel-header-icon p-link p-mr-2\"\n            @click=\"addStreamer()\"\n          >\n            <span class=\"pi pi-plus\"></span>\n          </button>\n        </template>\n        <DataTable :value=\"data\" stripedRows>\n          <Column\n            field=\"streaming\"\n            headerStyle=\"width: 6rem; text-align: center\"\n            header=\"Status\"\n            bodyClass=\"text-center\"\n            headerClass=\"text-center\"\n          >\n            <template #body=\"{ data }\">\n              <Button\n                icon=\"pi pi-video\"\n                class=\"p-button-rounded p-button-success\"\n                v-if=\"data.streaming\"\n              />\n              <Button\n                icon=\"pi pi-times\"\n                class=\"p-button-rounded p-button-outlined not-streaming\"\n                v-if=\"!data.streaming\"\n              />\n            </template>\n          </Column>\n          <Column field=\"twitch_username\" header=\"Event\">\n            <template #body=\"{ data }\">\n              <strong>{{ data.twitch_username }}</strong>\n            </template>\n          </Column>\n          <Column\n            field=\"delete\"\n            headerStyle=\"width: 4rem; text-align: center\"\n            header=\"\"\n          >\n            <template #body=\"{ data }\">\n              <Button\n                icon=\"pi pi-trash\"\n                class=\"p-button-rounded p-button-danger p-button-text\"\n                @click=\"deleteStreamer(data)\"\n              />\n            </template>\n          </Column>\n        </DataTable>\n        <h2 v-if=\"data.length === 0\">No streamers watched.</h2>\n      </Panel>\n    </div>\n    <div class=\"col-6\">\n      <Panel class=\"dark-header\" header=\"Websocket Stream\">\n        <Accordion :multiple=\"true\">\n          <AccordionTab\n            v-for=\"te in twitchEvents\"\n            :key=\"te.event_id\"\n            :header=\"twitchEventTitle(te)\"\n          >\n            <div class=\"prism-container\">\n              <Prism language=\"json\">{{ te }}</Prism>\n            </div>\n            <Button\n              label=\"Replay\"\n              type=\"button\"\n              class=\"p-button-raised p-button-primary\"\n              v-if=\"te.origin === 'twitch' || te.origin === 'replay'\"\n              @click=\"replay(te)\"\n            />\n          </AccordionTab>\n        </Accordion>\n      </Panel>\n    </div>\n  </div>\n  <Dialog\n    v-model:visible=\"displayAddModal\"\n    header=\"Add Streamer\"\n    :modal=\"true\"\n    :closable=\"false\"\n    style=\"width: 450px\"\n  >\n    <twitch-user\n      v-model:valueId=\"newStreamer.user_id\"\n      v-model:valueName=\"newStreamer.user_name\"\n      v-model:valueLogin=\"newStreamer.user_login\"\n      label=\"Streamer\"\n    ></twitch-user>\n    <template #footer>\n      <Button\n        label=\"Cancel\"\n        icon=\"pi pi-times\"\n        @click=\"closeAddForm\"\n        class=\"p-button-text\"\n      />\n      <Button\n        label=\"Submit\"\n        icon=\"pi pi-check\"\n        @click=\"submitAddForm\"\n        class=\"p-button-text\"\n      />\n    </template>\n  </Dialog>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  onMounted,\n  inject,\n  ref,\n  reactive,\n} from 'vue';\nimport { useStore } from 'vuex';\nimport TwitchUser from '../test-forms/components/TwitchUser.vue';\nimport _ from 'lodash';\n\nimport Prism from 'vue-prism-component';\n\nimport {\n  TauStatusWsService,\n  TauTwitchEventWsService,\n} from '@/services/tau-api-ws';\n\nimport { TwitchEvent, eventTitleMap } from '@/models/twitch-event';\nimport { Broadcaster } from '@/models/broadcaster';\nimport { Streamer } from '@/models/streamer';\n\nexport default defineComponent({\n  name: 'Streamers',\n  components: { Prism, TwitchUser },\n  setup() {\n    const store = useStore();\n\n    const data = computed(() => {\n      return store.getters['streamers/all'] as Streamer[];\n    });\n\n    const displayAddModal = ref(false);\n\n    const newStreamer = reactive({\n      user_id: '',\n      user_name: '',\n      user_login: '',\n    });\n\n    const broadcaster = computed<Broadcaster>(() => {\n      return store.getters['broadcaster/data'];\n    });\n\n    const twitchEvents = computed(() => {\n      return store.getters['twitchEvents/all'];\n    });\n\n    const fetchEventSubscriptions = async () => {\n      await store.dispatch('twitchEvents/loadAll');\n      await store.dispatch('streamers/loadAll');\n      await store.dispatch('broadcaster/load');\n      tauStatusWs.connect();\n      twitchEventWs.connect();\n    };\n\n    const tauStatusWs = inject('tauStatusWs') as TauStatusWsService;\n    const twitchEventWs = inject('twitchEventWs') as TauTwitchEventWsService;\n\n    onMounted(fetchEventSubscriptions);\n\n    function closeAddForm() {\n      displayAddModal.value = false;\n      newStreamer.user_id = '';\n      newStreamer.user_name = '';\n      newStreamer.user_login = '';\n    }\n\n    function submitAddForm() {\n      // do something\n      const payload: Streamer = {\n        twitch_username: newStreamer.user_name,\n        disabled: false,\n        streaming: false,\n      };\n      store.dispatch('streamers/create', payload);\n      closeAddForm();\n    }\n\n    function addStreamer() {\n      console.log('add streamer!');\n      displayAddModal.value = true;\n    }\n\n    function deleteStreamer(streamer: Streamer) {\n      console.log('delete streamer!', streamer);\n      store.dispatch('streamers/delete', streamer);\n    }\n\n    function twitchEventTitle(twitchEvent: TwitchEvent) {\n      const msgSource =\n        twitchEvent.origin === 'replay'\n          ? '[Replay] '\n          : twitchEvent.origin === 'test'\n          ? '[Test] '\n          : '';\n      return twitchEvent.event_type in eventTitleMap\n        ? msgSource + eventTitleMap[twitchEvent.event_type](twitchEvent)\n        : msgSource + eventTitleMap['default'](twitchEvent);\n    }\n\n    function replay(twitchEvent: TwitchEvent) {\n      store.dispatch('twitchEvents/replay', twitchEvent);\n    }\n\n    return {\n      data,\n      broadcaster,\n      twitchEvents,\n      twitchEventTitle,\n      replay,\n      addStreamer,\n      displayAddModal,\n      newStreamer,\n      closeAddForm,\n      submitAddForm,\n      deleteStreamer,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\">\n.p-panel {\n  &.dark-header {\n    .p-panel-header {\n      background-color: var(--bluegray-800) !important;\n      color: var(--bluegray-50) !important;\n    }\n  }\n}\n\n.prism-container {\n  width: 100%;\n}\n\n.not-streaming {\n  color: var(--bluegray-100) !important;\n  border-color: var(--bluegray-100) !important;\n}\n</style>\n","\nimport {\n  defineComponent,\n  computed,\n  onMounted,\n  inject,\n  ref,\n  reactive,\n} from 'vue';\nimport { useStore } from 'vuex';\nimport TwitchUser from '../test-forms/components/TwitchUser.vue';\nimport _ from 'lodash';\n\nimport Prism from 'vue-prism-component';\n\nimport {\n  TauStatusWsService,\n  TauTwitchEventWsService,\n} from '@/services/tau-api-ws';\n\nimport { TwitchEvent, eventTitleMap } from '@/models/twitch-event';\nimport { Broadcaster } from '@/models/broadcaster';\nimport { Streamer } from '@/models/streamer';\n\nexport default defineComponent({\n  name: 'Streamers',\n  components: { Prism, TwitchUser },\n  setup() {\n    const store = useStore();\n\n    const data = computed(() => {\n      return store.getters['streamers/all'] as Streamer[];\n    });\n\n    const displayAddModal = ref(false);\n\n    const newStreamer = reactive({\n      user_id: '',\n      user_name: '',\n      user_login: '',\n    });\n\n    const broadcaster = computed<Broadcaster>(() => {\n      return store.getters['broadcaster/data'];\n    });\n\n    const twitchEvents = computed(() => {\n      return store.getters['twitchEvents/all'];\n    });\n\n    const fetchEventSubscriptions = async () => {\n      await store.dispatch('twitchEvents/loadAll');\n      await store.dispatch('streamers/loadAll');\n      await store.dispatch('broadcaster/load');\n      tauStatusWs.connect();\n      twitchEventWs.connect();\n    };\n\n    const tauStatusWs = inject('tauStatusWs') as TauStatusWsService;\n    const twitchEventWs = inject('twitchEventWs') as TauTwitchEventWsService;\n\n    onMounted(fetchEventSubscriptions);\n\n    function closeAddForm() {\n      displayAddModal.value = false;\n      newStreamer.user_id = '';\n      newStreamer.user_name = '';\n      newStreamer.user_login = '';\n    }\n\n    function submitAddForm() {\n      // do something\n      const payload: Streamer = {\n        twitch_username: newStreamer.user_name,\n        disabled: false,\n        streaming: false,\n      };\n      store.dispatch('streamers/create', payload);\n      closeAddForm();\n    }\n\n    function addStreamer() {\n      console.log('add streamer!');\n      displayAddModal.value = true;\n    }\n\n    function deleteStreamer(streamer: Streamer) {\n      console.log('delete streamer!', streamer);\n      store.dispatch('streamers/delete', streamer);\n    }\n\n    function twitchEventTitle(twitchEvent: TwitchEvent) {\n      const msgSource =\n        twitchEvent.origin === 'replay'\n          ? '[Replay] '\n          : twitchEvent.origin === 'test'\n          ? '[Test] '\n          : '';\n      return twitchEvent.event_type in eventTitleMap\n        ? msgSource + eventTitleMap[twitchEvent.event_type](twitchEvent)\n        : msgSource + eventTitleMap['default'](twitchEvent);\n    }\n\n    function replay(twitchEvent: TwitchEvent) {\n      store.dispatch('twitchEvents/replay', twitchEvent);\n    }\n\n    return {\n      data,\n      broadcaster,\n      twitchEvents,\n      twitchEventTitle,\n      replay,\n      addStreamer,\n      displayAddModal,\n      newStreamer,\n      closeAddForm,\n      submitAddForm,\n      deleteStreamer,\n    };\n  },\n});\n","import { render } from \"./Streamers.vue?vue&type=template&id=16250530\"\nimport script from \"./Streamers.vue?vue&type=script&lang=ts\"\nexport * from \"./Streamers.vue?vue&type=script&lang=ts\"\n\nimport \"./Streamers.vue?vue&type=style&index=0&id=16250530&lang=scss\"\nscript.render = render\n\nexport default script","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Streamers.vue?vue&type=style&index=0&id=16250530&lang=scss\""],"sourceRoot":""}