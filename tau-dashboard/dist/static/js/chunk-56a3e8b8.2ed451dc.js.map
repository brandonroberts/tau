{"version":3,"sources":["webpack:///./src/components/views/WebhookMonitor.vue?d60a","webpack:///./src/components/views/WebhookMonitor.vue","webpack:///./src/components/views/WebhookMonitor.vue?71fc","webpack:///./src/components/views/WebhookMonitor.vue?7ea3"],"names":["class","header","value","webhooks","stripedRows","field","body","data","resetWebhooks","setup","publicUrl","tau","get","publicUrlData","public_url","split","console","log","helix","isLocal","url","baseUrl","resetType","payload","type","post","render","__scopeId"],"mappings":"kHAAA,W,yJCCE,yBAAwB,UAApB,mBAAe,G,+BAkBuC,O,+BACG,U,+BACA,U,oTApB7D,EACA,yBAqBQ,GArBDA,MAAM,cAAcC,OAAO,8B,YAChC,iBAeY,CAfZ,yBAeY,GAfAC,MAAO,EAAAC,SAAUC,YAAA,I,YAC3B,iBAA4C,CAA5C,yBAA4C,GAApCC,MAAM,OAAOJ,OAAO,SAC5B,yBAAgD,GAAxCI,MAAM,SAASJ,OAAO,WAC9B,yBAWS,GAXDI,MAAM,YAAYJ,OAAO,S,CACpBK,KAAI,GACb,gBADiBC,EACjB,EADiBA,KACjB,MADqB,CACrB,yBAOK,KANHP,MAAK,CAAC,KACiB,UAAQ,EAAK,UAAU,U,kFAStD,yBAAoE,GAA3D,QAAK,+BAAE,EAAAQ,cAAa,SAASR,MAAM,a,YAAY,iBAAG,C,YAC3D,yBAA0E,GAAjE,QAAK,+BAAE,EAAAQ,cAAa,YAAYR,MAAM,a,YAAY,iBAAM,C,YACjE,yBAA0E,GAAjE,QAAK,+BAAE,EAAAQ,cAAa,YAAYR,MAAM,a,YAAY,iBAAM,C,sFCZtD,+BAAgB,CAC7BS,MAD6B,WAE3B,IAAMN,EAAW,iBAA4B,IACvCO,EAAY,iBAAI,IAEtB,uBAAS,wCAAC,sHACoB,OAAKC,IAAIC,IAAI,cADjC,cACFC,EADE,OAERH,EAAUR,MAAQW,EAAcC,WAAWC,MAAM,KAAK,GACtDC,QAAQC,IAAIP,EAAUR,OAHd,SAIW,OAAKgB,MAAMN,IAC5B,0BALM,OAIFL,EAJE,OAORS,QAAQC,IAAIV,EAAKA,MACjBJ,EAASD,MAAQK,EAAKA,KARd,6CAWV,IAAMY,EAAU,SAAUC,GACxB,IAAMC,EAAUD,EAAIL,MAAM,KAAK,GAC/B,OAAOM,IAAYX,EAAUR,OAGzBM,EAAa,yDAAG,WAAgBc,GAAhB,8FACdC,EAAU,CACdC,KAAMF,GAFY,SAID,OAAKX,IAAIc,KAAK,iBAAkBF,GAJ/B,yDAAH,sDAOnB,MAAO,CACLpB,WACAK,gBACAW,c,UCnCN,EAAOO,OAASA,EAChB,EAAOC,UAAY,kBAEJ,gB","file":"static/js/chunk-56a3e8b8.2ed451dc.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./WebhookMonitor.vue?vue&type=style&index=0&id=44cd0fa0&lang=scss&scoped=true\"","<template>\n  <h1>Webhook Monitor</h1>\n  <Panel class=\"dark-header\" header=\"Registered Twitch Webhooks\">\n    <DataTable :value=\"webhooks\" stripedRows>\n      <Column field=\"type\" header=\"Type\"></Column>\n      <Column field=\"status\" header=\"Status\"></Column>\n      <Column field=\"transport\" header=\"Local\">\n        <template #body=\"{ data }\">\n          <i\n            class=\"pi\"\n            :class=\"\n              isLocal(data.transport.callback)\n                ? ['pi-check', 'green']\n                : ['pi-times', 'red']\n            \"\n          ></i>\n        </template>\n      </Column>\n    </DataTable>\n    <Button @click=\"resetWebhooks('all')\" class=\"mr-2 mt-2\">All</Button>\n    <Button @click=\"resetWebhooks('remote')\" class=\"mr-2 mt-2\">Remote</Button>\n    <Button @click=\"resetWebhooks('broken')\" class=\"mr-2 mt-2\">Broken</Button>\n    <!-- <Button @click=\"updateSettings()\">Update Settings</Button> -->\n  </Panel>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, ref } from 'vue';\n\nimport api$ from '@/services/tau-apis';\nimport {\n  EventsubSubscriptionResponse,\n  EventsubSubscription,\n} from '@/models/twitch-helix-endpoint';\n\nexport default defineComponent({\n  setup() {\n    const webhooks = ref<EventsubSubscription[]>([]);\n    const publicUrl = ref('');\n\n    onMounted(async () => {\n      const publicUrlData = await api$.tau.get('public_url');\n      publicUrl.value = publicUrlData.public_url.split('/')[2];\n      console.log(publicUrl.value);\n      const data = await api$.helix.get<EventsubSubscriptionResponse>(\n        'eventsub/subscriptions',\n      );\n      console.log(data.data);\n      webhooks.value = data.data;\n    });\n\n    const isLocal = function (url: string) {\n      const baseUrl = url.split('/')[2];\n      return baseUrl === publicUrl.value;\n    };\n\n    const resetWebhooks = async function (resetType: string) {\n      const payload = {\n        type: resetType,\n      };\n      const resp = await api$.tau.post('reset-webhooks', payload);\n    };\n\n    return {\n      webhooks,\n      resetWebhooks,\n      isLocal,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.green {\n  color: var(--green-400);\n}\n.red {\n  color: var(--pink-600);\n}\n</style>\n","\nimport { defineComponent, onMounted, ref } from 'vue';\n\nimport api$ from '@/services/tau-apis';\nimport {\n  EventsubSubscriptionResponse,\n  EventsubSubscription,\n} from '@/models/twitch-helix-endpoint';\n\nexport default defineComponent({\n  setup() {\n    const webhooks = ref<EventsubSubscription[]>([]);\n    const publicUrl = ref('');\n\n    onMounted(async () => {\n      const publicUrlData = await api$.tau.get('public_url');\n      publicUrl.value = publicUrlData.public_url.split('/')[2];\n      console.log(publicUrl.value);\n      const data = await api$.helix.get<EventsubSubscriptionResponse>(\n        'eventsub/subscriptions',\n      );\n      console.log(data.data);\n      webhooks.value = data.data;\n    });\n\n    const isLocal = function (url: string) {\n      const baseUrl = url.split('/')[2];\n      return baseUrl === publicUrl.value;\n    };\n\n    const resetWebhooks = async function (resetType: string) {\n      const payload = {\n        type: resetType,\n      };\n      const resp = await api$.tau.post('reset-webhooks', payload);\n    };\n\n    return {\n      webhooks,\n      resetWebhooks,\n      isLocal,\n    };\n  },\n});\n","import { render } from \"./WebhookMonitor.vue?vue&type=template&id=44cd0fa0&scoped=true\"\nimport script from \"./WebhookMonitor.vue?vue&type=script&lang=ts\"\nexport * from \"./WebhookMonitor.vue?vue&type=script&lang=ts\"\n\nimport \"./WebhookMonitor.vue?vue&type=style&index=0&id=44cd0fa0&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-44cd0fa0\"\n\nexport default script"],"sourceRoot":""}